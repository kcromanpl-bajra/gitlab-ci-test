stages:
  - code_quality
  - test

code_quality:
  stage: code_quality
  tags:
    - "shared-shell-1"
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH"
      when: always
    - if: "$CODE_QUALITY_DISABLED"
      when: never
  script:
    - git fetch --all
    - codeclimate analyze -f json $(git diff --name-only origin/$CI_DEFAULT_BRANCH) | jq 'del(.[] | select(.type == "measurement"))' > gl-code-quality-report.json
  artifacts:
    expire_in: 1 week
    paths:
      - gl-code-quality-report.json
    reports:
      codequality: gl-code-quality-report.json

rspec_test:
  stage: test
  tags:
    - "shared-shell-1"
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH"
      when: always
    - if: "$CODE_QUALITY_DISABLED"
      when: never
  before_script:
    - docker compose --env-file /dev/null -f dct.yml build --build-arg UID=$(id -u) --build-arg GID=$(id -g)
    - docker compose --env-file /dev/null -f dct.yml run --user "$(id -u):$(id -g)" test sh -c "bin/rails db:environment:set RAILS_ENV=test && bin/rails db:drop db:create db:migrate db:seed"
  script:
    - docker compose --env-file /dev/null -f dct.yml run --user "$(id -u):$(id -g)" test rails spec
  coverage: /\(\d+.\d+\%\) covered/
